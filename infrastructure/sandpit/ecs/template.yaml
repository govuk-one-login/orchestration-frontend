AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue

Parameters:
  Environment:
    Type: String
    Description: The name of the environment to deploy to
  VpcStackName:
    Type: String
    Description: The name of the stack used to create the VPC
  CodeSigningConfigArn:
    Type: String
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: none
  PermissionsBoundary:
    Type: String
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Default: none

Conditions:
  UsePermissionsBoundary:
    !Not [ !Equals [ none, !Ref PermissionsBoundary ] ]

Resources:
  # ECS
  OrchECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Sub ${Environment}-orch-app-cluster

  OrchECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${Environment}-orch-frontend

  OrchFrontendECSExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  OrchFrontendECSService:
    DependsOn: OrchFrontendAlbListener
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${Environment}-orch-frontend-ecs-service
      Cluster: !Ref OrchECSCluster
      TaskDefinition: !Ref OrchFrontendTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - subnet-0665fe32d17da80a4
            - subnet-021237bf29d8ef36d
            - subnet-04f1a57cc631f1a4c
          SecurityGroups:
            - !Ref OrchFrontendECSTaskSecurityGroup
      LoadBalancers:
        - ContainerName: sandpit-orch-frontend-image
          ContainerPort: 3000
          TargetGroupArn: !Ref OrchFrontendAlbTargetGroup

  OrchFrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${Environment}-orch-frontend-ecs-task-definition
      Cpu: 256
      Memory: 0.5GB
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt OrchFrontendECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: sandpit-orch-frontend-image
          Image: "CONTAINER-IMAGE-PLACEHOLDER"
          PortMappings:
            - ContainerPort: 3000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref OrchECSLogGroup
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: ecs

  # Application Load Balancer
  OrchFrontendAlb:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: !Sub ${Environment}-orch-frontend-alb
      Subnets:
        - subnet-0665fe32d17da80a4
        - subnet-021237bf29d8ef36d
        - subnet-04f1a57cc631f1a4c
      SecurityGroups:
        - !Ref OrchFrontendAlbSecurityGroup

  OrchFrontendAlbTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: !Sub ${Environment}-orch-frontend-alb-tg
      Port: 3000
      Protocol: HTTP
      VpcId: vpc-0301476c3d16323a3
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckPort: "traffic-port"
      HealthCheckPath: "/health"
      HealthCheckIntervalSeconds: 30
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: "200"

  OrchFrontendAlbListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref OrchFrontendAlbTargetGroup
      LoadBalancerArn: !Ref OrchFrontendAlb
      Port: 80
      Protocol: HTTP

  # Network Load Balancer
  OrchFrontendNlb:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: !Sub ${Environment}-orch-frontend-nlb
      Type: network
      Subnets:
        - subnet-0665fe32d17da80a4
        - subnet-021237bf29d8ef36d
        - subnet-04f1a57cc631f1a4c
      SecurityGroups:
        - !Ref OrchFrontendNlbSecurityGroup

  OrchFrontendNlbTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: !Sub ${Environment}-orch-frontend-nlb-tg
      Port: 80
      Protocol: TCP
      VpcId: vpc-0301476c3d16323a3
      TargetType: alb
      Targets:
        - Id: !Ref OrchFrontendAlb
      TargetType: alb
      HealthCheckPort: "traffic-port"
      HealthCheckIntervalSeconds: 30
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  OrchFrontendNlbListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref OrchFrontendNlbTargetGroup
      LoadBalancerArn: !Ref OrchFrontendNlb
      Port: 80
      Protocol: TCP

  # Security Groups and Ingress / Egress rules
  OrchFrontendECSTaskSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for ECS Tasks"
      VpcId: vpc-0301476c3d16323a3

  OrchFrontendECSTaskSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: "tcp"
      FromPort: 3000
      ToPort: 3000
      SourceSecurityGroupId:
        Fn::GetAtt:
          - OrchFrontendAlbSecurityGroup
          - GroupId
      GroupId:
        Fn::GetAtt:
          - OrchFrontendECSTaskSecurityGroup
          - GroupId
  
  OrchFrontendECSTaskSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: "-1"
      FromPort: 0
      ToPort: 65535
      CidrIp: "0.0.0.0/0"
      GroupId:
        Fn::GetAtt:
          - OrchFrontendECSTaskSecurityGroup
          - GroupId

  OrchFrontendAlbSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for OrchFrontendAlb"
      VpcId: vpc-0301476c3d16323a3

  OrchFrontendAlbSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: "tcp"
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId:
        Fn::GetAtt:
          - OrchFrontendNlbSecurityGroup
          - GroupId
      GroupId:
        Fn::GetAtt:
          - OrchFrontendAlbSecurityGroup
          - GroupId
  
  OrchFrontendAlbSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: "-1"
      FromPort: 3000
      ToPort: 3000
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - OrchFrontendECSTaskSecurityGroup
          - GroupId
      GroupId:
        Fn::GetAtt:
          - OrchFrontendAlbSecurityGroup
          - GroupId

  OrchFrontendNlbSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for OrchFrontendNlb"
      VpcId: vpc-0301476c3d16323a3

  OrchFrontendNlbSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: "tcp"
      FromPort: 80
      ToPort: 80
      CidrIp: "0.0.0.0/0"
      GroupId:
        Fn::GetAtt:
          - OrchFrontendNlbSecurityGroup
          - GroupId

  OrchFrontendNlbSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: "-1"
      FromPort: 80
      ToPort: 80
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - OrchFrontendAlbSecurityGroup
          - GroupId
      GroupId:
        Fn::GetAtt:
          - OrchFrontendNlbSecurityGroup
          - GroupId

Outputs:
  # OrchFrontendNlbDnsName and OrchFrontendNlbArn are used by the API Gateway (di-authentication-api) to define the NLB integration and VPC Link
  OrchFrontendNlbDnsName:
    Description: The DNS Name of the Orchestration Frontend NLB
    Value: !GetAtt OrchFrontendNlb.DNSName

  OrchFrontendNlbArn:
    Description: The ARN of the Orchestration Frontend NLB
    Value: !Ref OrchFrontendNlb

