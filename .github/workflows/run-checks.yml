name: Run Checks

on:
  workflow_call:
    secrets:
      SAM_APP_VALIDATE_ROLE_ARN:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  build-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Node.js version
        run: |
          version=$(grep -oP -m1 'node:\K.*(?=@)' Dockerfile)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV

      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Get NPM version
        run: echo "Using npm:$(npm -version)"

      - name: Cache NPM dependencies
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: npm install

      - name: Build app
        run: npm run build

  linting:
    needs: build-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Node.js version
        run: |
          version=$(grep -oP -m1 'node:\K.*(?=@)' Dockerfile)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV

      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Get NPM version
        run: echo "Using npm:$(npm -version)"

      - name: Cache NPM dependencies
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Check linting
        run: npm run check:lint

  formatting:
    needs: build-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Node.js version
        run: |
          version=$(grep -oP -m1 'node:\K.*(?=@)' Dockerfile)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV

      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Get NPM version
        run: echo "Using npm:$(npm -version)"

      - name: Cache NPM dependencies
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Check formatting
        run: npm run check:pretty

  testing:
    needs: build-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get Node.js version
        run: |
          version=$(grep -oP -m1 'node:\K.*(?=@)' Dockerfile)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV

      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Get NPM version
        run: echo "Using npm:$(npm -version)"

      - name: Cache NPM dependencies
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Run tests
        run: npm run test

      - name: Report coverage
        run: npm run test:coverage

      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: sonarsource/sonarqube-scan-action@aa494459d7c39c106cc77b166de8b4250a32bb97 # v5.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sam-validation:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@819220f63fb333a9a394dd0a5cab2d8303fd17e2 # v2
        with:
          use-installer: true

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: ${{ secrets.SAM_APP_VALIDATE_ROLE_ARN }}
          aws-region: eu-west-2

      - name: SAM validate
        run: sam validate
        working-directory: ./infrastructure
