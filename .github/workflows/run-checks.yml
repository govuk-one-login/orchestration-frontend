name: Run Checks

on:
  workflow_call:
    secrets:
      SAM_APP_VALIDATE_ROLE_ARN:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  build-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Node.js version
        run: |
          version=$(grep -oP '(?<="node": ")[^"]*' package.json)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV

      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: npm install

      - name: Build app
        run: npm run build

  linting:
    needs: build-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Node.js version
        run: |
          version=$(grep -oP '(?<="node": ")[^"]*' package.json)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV

      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Check linting
        run: npm run check:lint

  formatting:
    needs: build-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Node.js version
        run: |
          version=$(grep -oP '(?<="node": ")[^"]*' package.json)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV

      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Check formatting
        run: npm run check:pretty

  testing:
    needs: build-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Node.js version
        run: |
          version=$(grep -oP '(?<="node": ")[^"]*' package.json)
          echo "NODE_VERSION=$version" >> $GITHUB_ENV

      - name: Using Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: cache-primes
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Run unit tests
        run: npm run test:unit
      - name: Run integration tests
        run: npm run test:integration

  sam-validation:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.SAM_APP_VALIDATE_ROLE_ARN }}
          aws-region: eu-west-2

      - name: SAM validate
        run: sam validate
        working-directory: ./infrastructure

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
